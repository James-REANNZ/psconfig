{
  "title": "{{ display_task_group }}",
  "uid": "{{ grafana_uuid }}",
  "time": {
    "to": "now",
    "from": "now-24h"
  },
  "version": 1,
  "schemaVersion": 38,
  "tags": [
    "{{ dashboard_tag }}"
  ],
  "panels": [
    {
      "datasource": {{ tasks[0].grafana_datasource|tojson }},
      "type": "text",
      "gridPos": {
        "x": 0,
        "y": 0,
        "w": 24,
        "h": 3
      },
      "id": 1000,
      "options": {
        "mode": "html",
        "code": {
          "language": "plaintext",
          "showLineNumbers": false,
          "showMiniMap": false
        },
        "content": "<div>\n<text style=\"font-size:20pt;\">\n<img \nsrc=\"/grafana/public/img/perfsonar-logo-white-full.svg\" \nstyle=\"background:rgb(17, 18, 23); width:200px; \"/> \n</text>\n<a class=\"simple-button\" href=\"/grafana/dashboards/f/{{ grafana_folder_uid }}\" style=\"float: right;\">Dashboards</a>\n</div>\n\n\n<style>\n  /* custom stuff */\n  a.buttons, button.buttons {\n    text-decoration: none;\n    background-color: #1b6522;\n    border: 3px solid white; \n    border-radius: 3px;\n    color: white !important;  \n    font-weight: bold; \n    text-align: right; \n    padding: 10px; \n    width: auto;\n    display: inline-block;\n  }\n  a.simple-button {\n    text-decoration: none;\n    background-color: black;\n    border: 3px solid #1b6522; \n    border-radius: 3px;\n    color: white; \n    font-weight: bold; \n    text-align: right; \n    padding: 10px; \n    width: auto;\n    margin: 0 5px 0 5px;\n  }\n  a.simple-button:hover {\n    color: #1b6522;\n  }\n  h1.title,h2.title,h3.title,div.title {\n    color: #6D6E71; \n    font-weight:bold;\n  }\n  p.description {\n    color: #6D6E71;\n  }\n  a.link {\n    color: #1b6522;\n  }\n\n  /* ----grafana stuff---- */\n  button.css-82ooe6-button, button.css-1pq88ji-button {\n    background-color: rgba(78, 193, 224,0.7);\n    color: white;\n  }\n  button.css-82ooe6-button:hover, button.css-1pq88ji-button:hover {\n    background-color: #1b6522;\n  }\n  button.dashboard-row__title {\n    color: #6D6E71;\n  }\n  /* +add button */\n  button.css-r8pbcf-button-add-panel-button-add-panel-button-text,\n  button.css-1bvfhzx-button-add-panel-button-add-panel-button-text {\n    color: #1b6522;\n    border: 1px solid #1b6522;\n    }\n\n\n  /* ----light mode---- */\n  button.css-14424at {\n    color: #6D6E71; \n  }\n  button.css-14424at:hover {\n    color: #1b6522; \n  }\n    /* data links */\n  div.css-1d09i7b {\n    color: rgb(36, 41, 46);\n  }\n  div.css-1d09i7b:hover {\n    color: #1b6522;\n  }\n\n  /* ----dark mode---- */\n  div.css-1h2bvkc {\n    color: rgb(204, 204, 220);\n  }\n  div.css-1h2bvkc:hover {\n    color: #6d6e71;\n  }\n  button.css-1n3c59t {\n    color: #1b6522;\n  }\n  button.css-1n3c59t:hover {\n    color: #6D6E71;\n  }\n\n  /* data links */\n  div.css-1ijov7j {\n    color: rgb(204, 204, 220);\n  }\n  div.css-1ijov7j:hover {\n    color: #1b6522;\n  }\n  \n</style>"
      },
      "pluginVersion": "10.2.0",
      "transparent": true
    },
{% for task in tasks %}  
    {
      "id": {{ loop.index }},
      "title": "{{ task.display_task_name }}{% if task.reverse %} (Reverse){% endif %}",
      "transparent": true,
      "type": "esnet-matrix-panel",
      "pluginVersion": "9.2.2",
      "datasource": {{ task.grafana_datasource|tojson }},
      "gridPos": {
        "h": {{ [24,3 + task.rows|length * 2]|min }},
        "w": {{ [24,3 + task.cols|length * 2]|min }},
        "x": 0,
        "y": 0
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": {{ task.thresholds|tojson }}
          },
          "unit": "{{ task.unit }}"
        },
        "overrides": []
      },
      "options": {
        "addUrl": true,
        "cellPadding": 5,
        "cellSize": 15,
        "defaultColor": "transparent",
        "inputList": true,
        "nullColor": "#E6E6E6",
{% if task.get(static_fields, True) %}
        "staticColumns": "{{ task.cols|join(',') }}",
        "staticRows": "{{ task.rows|join(',') }}",
{% endif %}  
        "txtLength": 50,
        "txtSize": 10,
        "url": "{{ task.matrix_url }}",
        "valueField": "{{ task.value_field }}",
        "valueText": "{{ task.value_text }}",
{% if task.reverse %}       
        "sourceField": "{{ task.col_field }}",
        "targetField": "{{ task.row_field }}",
        "sourceText": "To",
        "targetText": "From",
        "urlVar1": "{{ task.matrix_url_var1 }}",
        "urlVar2": "{{ task.matrix_url_var2 }}"        
{% else %}
        "sourceField": "{{ task.row_field }}",
        "targetField": "{{ task.col_field }}",
        "sourceText": "From",
        "targetText": "To",
        "urlVar1": "{{ task.matrix_url_var1 }}",
        "urlVar2": "{{ task.matrix_url_var2 }}"
{% endif %}   
      },
      "targets": [
        {
          "alias": "",
          "bucketAggs": [
            {
              "field": "{{ task.row_field }}",
              "id": "2",
              "settings": {
                "min_doc_count": "1",
                "order": "desc",
                "orderBy": "_term",
                "size": "0"
              },
              "type": "terms"
            },
            {
              "field": "{{ task.col_field }}",
              "id": "3",
              "settings": {
                "min_doc_count": "1",
                "order": "desc",
                "orderBy": "_term",
                "size": "0"
              },
              "type": "terms"
            }
          ],
          "datasource": {{ task.grafana_datasource|tojson }},
          "metrics": [
            {
{% if 'stat_meta' in task %}
              "meta": {{ task.stat_meta|tojson }},
{% endif %}
              "id": "1",
              "field": "{{ task.stat_field }}",
              "type": "{{ task.stat_type }}"
            }
          ],
          "query": "reference.display-task-name.keyword: \"{{ task.display_task_name }}\"",
{% if task.grafana_datasource.type == "grafana-opensearch-datasource" %}"queryType": "lucene",{% endif %}
          "refId": "A",
          "timeField": "pscheduler.start_time"
        }
      ]
    }{% if not loop.last %},{% endif %}
{% endfor %}
  ]
}