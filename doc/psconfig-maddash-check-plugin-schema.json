{
    "id": "http://www.perfsonar.net/psconfig-maddash-agent-check-plugin-schema#",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "pSConfig MaDDash Check Plug-In Schema",
    "description": "Schema for pSConfig MaDDash Check Plug-ins. This allows people to define new types of checks",
    "type": "object",
    "additionalProperties": false,
    "required": [ "type", "name", "description", "requires", "status-labels", "defaults", "command" ],
    "properties": {
    
        "type": {
            "type": "string",
            "description": "Type of check. Used by other config files to reference this check."
        }, 
        
        "name": {
            "type": "string",
            "description": "Human-readable name used for display purposes"
        },
        
        "description": {
            "type": "string",
            "description": "Human-readable description used for display purposes that tells what check does"
        },
        
        "requires": {
            "$ref": "#/pSConfig/TaskSelector",
            "description": "Indicates minimum requirements a task must meet to use this task"
        },
        
        "archive-accessor": {
            "$ref": "#/pSConfig/JQTransformSpecification",
            "description": "JQ script used to build the accessor for supported archivers"
        },
        
        "status-labels": {
            "$ref": "#/pSConfig/StatusLabels",
            "description": "Descriptions of what each status level means"
        },
        
        "defaults": {
            "$ref": "#/pSConfig/CheckDefaults",
            "description": "Default parameters for plug-in"
        },
        
        "vars": {
            "$ref": "#/pSConfig/CheckVars",
            "description": "Custom variables that can be used in command-opts, command-args and maddash-check-params in format {% var.VARNAME %}"
        },
        
        "command": {
            "type": "string",
            "description": "The command to run for this check. Can use variables like {% check_opts %} and {% check_args %} to build checks."
        },
        
        "command-opts": {
            "$ref": "#/pSConfig/CommandOpts",
            "description": "A list of command line options to be used with check. Keys must start with - the value is an object defining when and how to use check"
        },
        
        "command-args": {
            "type": "array",
            "items": { "type": "string" } ,
            "description": "List of arguments to pass to the command-line"
        }
    },
    
     "pSConfig": {
        
        "AnyJSON": {
            "anyOf": [
                { "type": "array" },
                { "type": "boolean" },
                { "type": "integer" },
                { "type": "null" },
                { "type": "number" },
                { "type": "object" },
                { "type": "string" }
            ]
        },
        
        "CheckDefaults": {
            "type": "object",
            "properties": {
                "check-interval": {
                    "$ref": "#/pSConfig/Duration",
                    "description": "How often to run check"
                },
                "warning-threshold": {
                    "type": "string",
                    "description": "Threshold for warning level"
                },
                "critical-threshold": {
                    "type": "string",
                    "description": "Threshold for critical level"
                },
                "report-yaml-file": {
                    "type": "string",
                    "description": "Location of YAML file with report to use for this check"
                },
                "retry-interval": {
                    "$ref": "#/pSConfig/Duration",
                    "description": "How often to check after a check detects a change in state"
                },
                "retry-attempts": {
                    "$ref": "#/pSConfig/IntZero",
                    "description": "How many times to retry after detecting a change in state"
                },
                "timeout": {
                    "$ref": "#/pSConfig/Duration",
                    "description": "How long to wait for check to complete"
                },
                "params": {
                    "$ref": "#/pSConfig/AnyJSON",
                    "description": "Plug-in specific parameters"
                }
            },
            "required": [ "check-interval", "critical-threshold", "warning-threshold" ],
            "additionalProperties": false
        },
        
        "CheckVars": {
            "type": "object",
            "patternProperties": { 
                "^[a-zA-Z0-9:._\\-]+$": { "$ref": "#/pSConfig/JQTransformSpecification" }
            },
            "additionalProperties": false
        },
        
        "CommandOpt": {
            "type": "object",
            "properties": { 
                "condition": {
                    "type": "string",
                    "description": "String that must be non-empty string for this condition to evaluate true. Use variables here to make truly conditional."
                },
                "arg": {
                    "type": "string",
                    "description": "Argument to pass to option. Use variables here to set dynamic values."
                },
                "required": {
                    "type": "boolean",
                    "description": "Indicates whether option is required to run"
                } 
            },
            "required": [ "condition" ],
            "additionalProperties": false
        },
        
        "CommandOpts": {
            "type": "object",
            "patternProperties": { 
                "^-[a-zA-Z0-9:._\\-]+$": { "$ref": "#/pSConfig/CommandOpt" }
            },
            "additionalProperties": false
        },
        
        "Duration": {
            "type": "string",
            "pattern": "^P(?:\\d+(?:\\.\\d+)?W)?(?:\\d+(?:\\.\\d+)?D)?(?:T(?:\\d+(?:\\.\\d+)?H)?(?:\\d+(?:\\.\\d+)?M)?(?:\\d+(?:\\.\\d+)?S)?)?$",
            "x-invalid-message": "'%s' is not a valid ISO 8601 duration."
        },
        
        "JQTransformSpecification": {
            "type": "object",
            "properties": {
                "script":   {
                    "anyOf": [
                        { "type": "string" },
                        { "type": "array", "items": { "type": "string" } }
                    ]
                }
            },
            "additionalProperties": false,
            "required": [ "script" ]
        },
        
        "IntZero": {
            "type": "integer",
            "minimum": 0
        },

        "StatusLabels": {
            "type": "object",
            "properties": {
                "ok": { "type": "string" },
                "warning": { "type": "string" },
                "critical": { "type": "string" },
                "notrun": { "type": "string" },
                "unknown": { "type": "string" },
                "custom": { 
                    "$ref": "#/pSConfig/StatusLabelCustom" 
                }
            },
            "required": [ "ok", "warning", "critical", "notrun", "unknown"],
            "additionalProperties": false
        },
        
        "StatusLabelCustom": {
            "type": "object",
            "patternProperties": { 
                "^[0-9]+$": { "type": "string" }
            },
            "additionalProperties": false
        },
        
        "TaskSelector": {
            "type": "object",
            "properties": {
                "test-type": {
                    "type": "array",
                    "items": { "type": "string" },
                    "description": "Match against any test-type in the list"
                },
                "task-name": {
                    "type": "array",
                    "items": { "type": "string" },
                    "description": "Match against any task name in the list"
                },
                "archive-type": {
                    "type": "array",
                    "items": { "type": "string" },
                    "description": "Match against any archiver with the given type"
                },
                "jq": { 
                    "$ref": "#/pSConfig/JQTransformSpecification",
                    "description": "JQ script to transform downloaded pSConfig JSON"
                    
                }
            },
            "additionalProperties": false
        }
    }
}